<?php
/**
 * Magento Enterprise Edition
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Magento Enterprise Edition License
 * that is bundled with this package in the file LICENSE_EE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.magentocommerce.com/license/enterprise-edition
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     enterprise_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://www.magentocommerce.com/license/enterprise-edition
 */

/**
 * Product view template
 *
 * @see Mage_Catalog_Block_Product_View
 * @see Mage_Review_Block_Product_View
 */
?>
<?php
/* @var $this Mage_Bundle_Block_Catalog_Product_View */
$_helper = $this->helper('catalog/output');
$_product = $this->getProduct();
?>
<script type="text/javascript">
    var optionsPrice = new Product.OptionsPrice(<?php echo $this->getJsonConfig() ?>);
</script>
<div id="messages_product_view"><?php echo $this->getMessagesBlock()->toHtml() ?></div>
<div id="bundle-product-wrapper">
    <div id="bundleProduct">
        <div id="productView" class="product-view">
            <div class="product-essential clearfix">
                <div class="product-shop">
                    <div class="product-main-info">
                        <div class="product-name">
                            <h1><?php echo $_helper->productAttribute($_product, $_product->getName(), 'name') ?></h1>
                        </div>
                        <p class="product-ids"><?php echo $this->__('SKU-%s', $this->escapeHtml($_product->getSku())); ?></p>
                        <?php echo $this->getReviewsSummaryHtml($_product, false, true)?>
                        <?php if ($_product->getShortDescription()):?>
                            <div class="short-description std">
                                <h4><?php echo $this->__('Model Highlights') ?></h4>
                                <p><?php echo $_helper->productAttribute($_product, nl2br($_product->getShortDescription()), 'short_description') ?></p>               
                            </div>
                        <?php endif;?>
                        <?php echo $this->getChildHtml('alert_urls') ?>
                        <?php echo $this->getChildHtml('product_type_data') ?>
                    </div>
                    <?php echo $this->getChildHtml('tierprices') ?>
                    <?php echo $this->getChildHtml('extrahint') ?>

                    <?php if (!$this->hasOptions()):?>
                        <div class="add-to-box">
                            <?php if($_product->isSaleable()): ?>
                                <?php echo $this->getChildHtml('addtocart') ?>
                            <?php endif; ?>                            
                        </div>                    
                    <?php endif; ?>
                    <ul class="share clearfix">
                        <li class="facebook"></li>
                        <li class="twitter"></li>
                        <li class="google"></li>
                        <li class="pinit"></li>
                    </ul>                  
                </div>
                <div class="product-img-box">
                    <?php echo $this->getChildHtml('media') ?>
                </div>
            </div>
        </div>
        <form action="<?php echo $this->getSubmitUrl($_product) ?>" method="post" id="product_addtocart_form"<?php if($_product->getOptions()): ?> enctype="multipart/form-data"<?php endif; ?>>
        <div class="no-display">
            <input type="hidden" name="product" value="<?php echo $_product->getId() ?>" />
            <input type="hidden" name="related_product" id="related-products-field" value="" />
        </div>
        <div style="clear:both"></div>
        <?php if ($_product->isSaleable() && $this->hasOptions()): ?>
        <div id="options-container">
            <div id="customizeTitle" class="page-title title-buttons">
                <h1><?php echo $this->__('Customize %s', $_helper->productAttribute($_product, $_product->getName(), 'name')) ?></h1>
                <!--<a href="#" onclick="Enterprise.Bundle.end(); return false;"><small>&lsaquo;</small> Go back to product detail</a> -->
            </div>
            <?php echo $this->getChildHtml('bundleSummary') ?>
            <?php if ($this->getChildChildHtml('container1')):?>
                <?php echo $this->getChildChildHtml('container1', '', true, true) ?>
            <?php elseif ($this->getChildChildHtml('container2')):?>
                <?php echo $this->getChildChildHtml('container2', '', true, true) ?>
            <?php endif;?>
        </div>
        <?php endif;?>
        </form>
    </div>
</div>
<script type="text/javascript">
        <?php if ($this->isStartCustomization()): ?>
            Enterprise.Bundle.start();
        <?php endif;?>
        var productAddToCartForm = new VarienForm('product_addtocart_form');
        productAddToCartForm.submit = function(button, url) {
            if (this.validator.validate()) {
                var form = this.form;
                var oldUrl = form.action;

                if (url) {
                   form.action = url;
                }
                var e = null;
                try {
                    this.form.submit();
                } catch (e) {
                }
                this.form.action = oldUrl;
                if (e) {
                    throw e;
                }

                if (button && button != 'undefined') {
                    button.disabled = true;
                }
            }
        }.bind(productAddToCartForm);

        productAddToCartForm.submitLight = function(button, url){
            if(this.validator) {
                var nv = Validation.methods;
                delete Validation.methods['required-entry'];
                delete Validation.methods['validate-one-required'];
                delete Validation.methods['validate-one-required-by-name'];
                // Remove custom datetime validators
                for (var methodName in Validation.methods) {
                    if (methodName.match(/^validate-datetime-.*/i)) {
                        delete Validation.methods[methodName];
                    }
                }

                if (this.validator.validate()) {
                    if (url) {
                        this.form.action = url;
                    }
                    this.form.submit();
                }
                Object.extend(Validation.methods, nv);
            }
        }.bind(productAddToCartForm);

        Enterprise.Bundle.initialize();
</script>
